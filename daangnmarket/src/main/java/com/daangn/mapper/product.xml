<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace = "mapper.product">
	<!-- productsearch -->
	<select id = "productsearch" parameterType = "map" resultType = "com.spring.vo.ProductVO">
		SELECT RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE, CATEGORY 
				 FROM (SELECT ROWNUM RNO, PID, PTITLE, FAVORITE, SALED, PRICE, LOCATION, PSFILE, CATEGORY   
				 FROM (SELECT PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE, CATEGORY FROM PRODUCT_BOARD  
				 ORDER BY PDATE DESC))  
		<choose>
			<when test = "category eq 'choice'">
				WHERE PTITLE LIKE '%'||#{sname}||'%' OR LOCATION LIKE '%'||#{sname}||'%'
			</when>
			<when test = "category eq 'state'">
				WHERE LOCATION LIKE '%'||#{sname}||'%'
			</when>
			<when test = "category eq 'product'">
				WHERE PTITLE LIKE '%'||#{sname}||'%'
			</when>
		</choose>
	</select>

	<!-- member -->
	<select id = "member" parameterType = "java.lang.String" resultType = "com.spring.vo.MemberVO">
		select id,name,email,phone,addr,introduce,to_char(joindate,'yyyy-mm-dd')joindate,sale,purchase,imagepath from daangn_member where id=#{id}
	</select>

	<!-- location -->
	<select id = "location"  parameterType = "java.lang.String" resultType = "java.lang.String">
		SELECT ADDR FROM DAANGN_MEMBER WHERE ID = #{id}
	</select>
	
	<!-- username -->
	<select id = "username"  parameterType = "java.lang.String" resultType = "java.lang.String">
		SELECT NAME FROM DAANGN_MEMBER WHERE ID = #{id}
	</select>

	<!-- productlist -->
	<select id = "productlistpage" parameterType = "map" resultType = "com.spring.vo.ProductVO">
		SELECT RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE 
				 FROM (SELECT ROWNUM RNO, PID, PTITLE, FAVORITE, SALED, PRICE, LOCATION, PSFILE   
				 FROM (SELECT PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE FROM PRODUCT_BOARD  
				 ORDER BY PDATE DESC))  
				 WHERE RNO BETWEEN #{start} AND #{end}
	</select>
	
	<select id = "productlist" resultType = "com.spring.vo.ProductVO"> 
		SELECT RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PSFILE, PRICE, REPORT 
				 FROM (SELECT ROWNUM RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE, REPORT   
				 FROM (SELECT PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE, REPORT FROM PRODUCT_BOARD  
				 ORDER BY PDATE DESC))  
	</select>
	
	<select id = "productlistuser" parameterType = "java.lang.String" resultType = "com.spring.vo.ProductVO"> 
		SELECT RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PSFILE, PRICE 
				 FROM (SELECT ROWNUM RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE   
				 FROM (SELECT PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE FROM PRODUCT_BOARD  
				 WHERE ID = #{id}
				 ORDER BY PDATE DESC))
				 WHERE RNO BETWEEN 1 AND 3  
	</select>
	<select id = "productlistmore" parameterType = "java.lang.String" resultType = "com.spring.vo.ProductVO"> 
		SELECT RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PSFILE, PRICE 
				 FROM (SELECT ROWNUM RNO, PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE   
				 FROM (SELECT PID, PTITLE, FAVORITE, SALED, LOCATION, PRICE, PSFILE FROM PRODUCT_BOARD  
				 WHERE ID = #{id}
				 ORDER BY PDATE DESC))
	</select>
	
	<!-- morelist --><!-- 이 부분은 마이페이지로 이동해서 볼 수 있도록 진행 -->
	<!-- <select id = "morelist" resultType = "com.spring.vo.ProductVO">
		SELECT RNO, PID, PTITLE, PHIT, PDATE   
				 FROM (SELECT ROWNUM RNO, PID, PTITLE, PHIT, TO_CHAR(PDATE, 'YYYY-MM-DD') PDATE   
				 FROM (SELECT PID, PTITLE, PHIT, PDATE FROM PRODUCT_BOARD  
				 ORDER BY PDATE DESC))  
	</select> -->
	
	<!-- count  -->
	<select id = "count" resultType = "int"> select count(*) from product_board </select>
	
	<!-- delete -->
	<delete id = "pro_delete" parameterType = "java.lang.String">
		DELETE FROM PRODUCT_BOARD WHERE PID = #{pid}
	</delete>
	
	<!-- psfile  -->
	<select id = "psfile" parameterType = "java.lang.String" resultType = "java.lang.String">
		SELECT PSFILE FROM PRODUCT_BOARD WHERE PID = #{pid}
	</select>


	
	
	<!-- updateNofile -->
	<update id = "pro_updateNofile" parameterType = "com.spring.vo.ProductVO">
		UPDATE PRODUCT_BOARD SET PTITLE =#{ptitle, jdbcType = VARCHAR}, PCONTENT =#{pcontent, jdbcType = VARCHAR}, CATEGORY=#{category, jdbcType = VARCHAR}, PRICE =#{price, jdbcType = NUMERIC}
		WHERE PID = #{pid, jdbcType = VARCHAR}   	
	</update>
	
	<!-- updateFile -->
	<update id = "pro_update" parameterType = "com.spring.vo.ProductVO">
		UPDATE PRODUCT_BOARD SET PTITLE =#{ptitle, jdbcType = VARCHAR}, PCONTENT=#{pcontent, jdbcType = VARCHAR}, CATEGORY =#{category, jdbcType = VARCHAR}, PRICE =#{price, jdbcType = NUMERIC}, 
		PFILE = #{pfile, jdbcType = VARCHAR}, PSFILE = #{psfile, jdbcType = VARCHAR} WHERE PID =#{pid, jdbcType = VARCHAR}    
	</update>
	
	
	
	
	<!-- updatehit -->
	<update id = "updateHit" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET PHIT = PHIT + 1  
					 WHERE PID = #{pid}
	</update>
	
	
	<!-- updateSale -->
	<update id = "updateSale" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET SALED = 'Y' WHERE PID = #{pid}
	</update>
	
	<!-- updatelike -->
	<update id = "updatelike" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET FAVORITE = FAVORITE + 1  
					 WHERE PID = #{pid}
	</update>
	<!-- updatedislike -->
	<update id = "updatedislike" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET FAVORITE = FAVORITE + 1  
					 WHERE PID = #{pid}
	</update>
	
	<!-- updatedislike -->
	<update id = "updatereport" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET REPORT = REPORT + 1  
					 WHERE PID = #{pid}
	</update>
	
	<!-- updatereport -->
	<update id = "updateReport" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET REPORT = REPORT + 1  
					 WHERE PID = #{pid}
	</update>
	
	
	<!-- select_delete -->
	<delete id = "select_delete" parameterType = "java.lang.reflect.Array">
		delete from board_table 
		where pid in 
	 	<foreach item="stArray" index="index" collection="array"
		      open="(" separator="," close=")">
		        #{stArray}
 		</foreach>
		
	</delete>
	
	
	<!-- updatechat -->
	<update id = "updateChat" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET CHAT = CHAT + 1  
					 WHERE PID = #{pid}
	</update>
	
	<!-- updatefavorite -->
	<update id = "updateFavorite" parameterType = "java.lang.String">
		UPDATE PRODUCT_BOARD SET FAVORITE = FAVORITE + 1  
					 WHERE PID = #{pid}
	</update>
	
	
	<!-- productcontent -->
	<select id = "content" parameterType = "java.lang.String" resultType = "com.spring.vo.ProductVO">
		SELECT PID, PCONTENT, PTITLE, CATEGORY, PRICE, CHAT, FAVORITE, PHIT, REPORT, SALED, LOCATION, TO_CHAR(PDATE, 'YYYY-MM-DD') PDATE, PSFILE, ID, PCHOICE 
		FROM PRODUCT_BOARD  
		WHERE PID = #{pid}
	</select>
	
	<!-- insert -->
	<insert id = "insert" parameterType = "com.spring.vo.ProductVO">
		<choose>   
			<when test = "pfile != null">
				insert into product_board values('p_'||SEQ_PRODUCT_PID.nextval, #{ptitle}, #{pcontent}, #{category}, #{price}, #{pchoice}, sysdate, #{location}, #{id}, 0, 0, 0, 0, 'N', #{pfile}, #{psfile})
			</when>
			<otherwise>
				insert into product_board values('p_'||SEQ_PRODUCT_PID.nextval, #{ptitle}, #{pcontent}, #{category}, #{price}, #{pchoice}, sysdate, #{location}, #{id}, 0, 0, 0, 0, 'N', null, null)
			</otherwise>		
		</choose>	
	</insert>
	
</mapper>